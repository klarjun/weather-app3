{"version":3,"sources":["components/CurrentWeather.js","components/WeatherForecast.js","api/WeatherApi.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentWeather","props","currentTemp","weatherData","current","temp_c","maxTemp","forecast","forecastday","day","maxtemp_c","minTemp","mintemp_c","condition","text","icon","sunrise","astro","sunset","location","name","country","useState","input","setInput","className","onClick","searchWeather","onChange","e","target","value","type","placeholder","required","src","alt","WeatherForecast","rainChancesDay1","daily_will_it_rain","rainChancesDay2","maxTempDay1","maxTempDay2","minTempDay1","minTempDay2","conditionDay1","conditionDay2","iconDay1","iconDay2","sunriseDay1","sunriseDay2","sunsetDay1","sunsetDay2","dateDay1","date","dateDay2","WeatherApi","weather","setWeather","apiKey","useEffect","a","axios","get","request","data","console","log","fetchData","city","then","catch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.552de47d.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\nconst CurrentWeather = (props) => {\n\n    const currentTemp = props.weatherData.current.temp_c;\n\n    const maxTemp =  props.weatherData.forecast.forecastday['0'].day.maxtemp_c;\n\n    const minTemp =  props.weatherData.forecast.forecastday['0'].day.mintemp_c;\n\n    const condition = props.weatherData.forecast.forecastday['0'].day.condition.text;\n\n    const icon = props.weatherData.forecast.forecastday['0'].day.condition.icon;\n\n    const sunrise = props.weatherData.forecast.forecastday['0'].astro.sunrise;\n\n    const sunset = props.weatherData.forecast.forecastday['0'].astro.sunset;\n\n    //const date = props.weatherData.forecast.forecastday['0'].date;\n\n    const location = props.weatherData.location.name;\n\n    const country = props.weatherData.location.country;\n    \n    const [input, setInput] = useState(\"48207\");\n    const cityInput = (e) => {\n        setInput(e.target.value);\n    }\n    \n    return(\n        <div className=\"CurrentWeather\">\n            \n            {/* Main Widget Displaying Today's Weather */}    \n            <div className=\"container\">\n                <div className=\"widget\" onClick={() => props.searchWeather(input)}>\n                    \n                    {/* Search Tool */}    \n                    <div className=\"search1\">\n                        <div className=\"flexbox\">\n                            <div className=\"search\">\n                                <div className=\"inp\">\n                                    <input onChange= {cityInput} onClick={() => props.searchWeather(input)} type=\"text\" placeholder=\"Zip Code or City\" required/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Left Half displaying Today's Weather Condition */}\n                    <div className=\"left\">\n                        <img src={icon} className=\"icon\" alt=\"\"/>\n                        <h3 className=\"weather-status\"> {condition} </h3>\n                    </div>\n\n                    {/* Right Half displaying Location and Country */}\n                    <div className=\"right\">\n                        <h5 className=\"city\">{location}, {country} </h5>\n                        <h5 className=\"degree\">{currentTemp}&#176;c</h5>\n                    </div>\n\n                    {/* Bottom Half displaying Other Weather Details */}\n                    <div className=\"bottom\">\n                        <div>\n                            <span>Max temp</span>\n                            <span> {maxTemp}&#176;c </span>\n                        </div>\n                        <div>\n                            <span>Min temp</span>\n                            <span> {minTemp}&#176;c </span> \n                        </div>\n                        <div>\n                            <span>Sunrise:</span>\n                            <span> {sunrise} </span>\n                        </div>\n                        <div>\n                            <span>Sunset:</span>\n                            <span> {sunset}</span>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CurrentWeather;","import React from \"react\";\n\n\nconst WeatherForecast = (props) => {\n\n    const rainChancesDay1 = props.weatherData.forecast.forecastday['1'].day.daily_will_it_rain;\n    const rainChancesDay2 = props.weatherData.forecast.forecastday['2'].day.daily_will_it_rain;\n\n    const maxTempDay1 =  props.weatherData.forecast.forecastday['1'].day.maxtemp_c;\n    const maxTempDay2 =  props.weatherData.forecast.forecastday['2'].day.maxtemp_c;\n\n    const minTempDay1 =  props.weatherData.forecast.forecastday['1'].day.mintemp_c;\n    const minTempDay2 =  props.weatherData.forecast.forecastday['2'].day.mintemp_c;\n\n    const conditionDay1 = props.weatherData.forecast.forecastday['1'].day.condition.text;\n    const conditionDay2 = props.weatherData.forecast.forecastday['2'].day.condition.text;\n\n    const iconDay1 = props.weatherData.forecast.forecastday['1'].day.condition.icon;\n    const iconDay2 = props.weatherData.forecast.forecastday['2'].day.condition.icon;\n\n    const sunriseDay1 = props.weatherData.forecast.forecastday['1'].astro.sunrise;\n    const sunriseDay2 = props.weatherData.forecast.forecastday['2'].astro.sunrise;\n\n    const sunsetDay1 = props.weatherData.forecast.forecastday['1'].astro.sunset;\n    const sunsetDay2 = props.weatherData.forecast.forecastday['2'].astro.sunset;\n\n    const dateDay1 = props.weatherData.forecast.forecastday['1'].date;\n    const dateDay2 = props.weatherData.forecast.forecastday['2'].date;\n\n    //Functions to determine the possibility of rain\n    function willItRainDay1(){\n        if(rainChancesDay1 === 1 ){\n            return \"Yes\";\n        }else{\n            return \"No\";\n        }\n    }\n\n    function willItRainDay2(){\n        if(rainChancesDay2 === 1 ){\n            return \"Yes\";\n        }else{\n            return \"No\";\n        }\n    }\n\n    return(\n        <div className=\"WeatherForecast\">\n\n            {/* Sub Widget - 1 Displaying Today's Weather */}   \n            <div className=\"sub-container-1\">\n                <div className=\"sub-widget-1\">\n\n                    <div className=\"center\">\n                        <h5 className=\"city\">{dateDay1}</h5>\n                    </div>\n\n                    {/* Left Half displaying Today's Weather Condition */}\n                    <div className=\"left\">\n                        <img src={iconDay1} className=\"icon\" alt=\"\"/>\n                        <h5 className=\"weather-status\">{conditionDay1}</h5>\n                    </div>\n\n                    {/* Right Half displaying Sunrise and Sunset */}\n                    <div className=\"right\">\n                        <h5 className=\"city\"> <span>Sunrise: </span>{sunriseDay1}</h5>\n                        <h5 className=\"city\"> <span>Sunset: </span>{sunsetDay1}</h5>\n                    </div>\n\n                    {/* Bottom Half displaying Other Weather Details */}\n                    <div className=\"bottom\">\n                        <div>\n                            <span>Max temp</span>\n                            <span> {maxTempDay1}&#176;c </span>\n                        </div>\n                        <div>\n                            <span>Min temp</span>\n                            <span> {minTempDay1}&#176;c </span> \n                        </div>\n                        <div>\n                            Does it rain today? <span>{willItRainDay1()}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Sub Widget - 2 Displaying Today's Weather */}   \n            <div className=\"sub-container-2\">\n                <div className=\"sub-widget-2\">\n\n                    <div className=\"center\">\n                        <h5 className=\"city\">{dateDay2}</h5>\n                    </div>\n\n                    {/* Left Half displaying Today's Weather Condition */}\n                    <div className=\"left\">\n                        <img src={iconDay2} className=\"icon\" alt=\"\"/>\n                        <h5 className=\"weather-status\">{conditionDay2}</h5>\n                    </div>\n\n                    {/* Right Half displaying Sunrise and Sunset */}\n                    <div className=\"right\">\n                        <h5 className=\"city\"> <span>Sunrise: </span>{sunriseDay2}</h5>\n                        <h5 className=\"city\"> <span>Sunset: </span>{sunsetDay2}</h5>\n                    </div>\n\n                    {/* Bottom Half displaying Other Weather Details */}\n                    <div className=\"bottom\">\n                        <div>\n                            <span>Max temp</span>\n                            <span> {maxTempDay2}&#176;c </span>\n                        </div>\n                        <div>\n                            <span>Min temp</span>\n                            <span> {minTempDay2}&#176;c</span> \n                        </div>\n                        <div>\n                            Does it rain today? <span>{willItRainDay2()}</span>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default WeatherForecast;","import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport CurrentWeather from \"../components/CurrentWeather\";\nimport WeatherForecast from \"../components/WeatherForecast\";\n\nconst WeatherApi = () => {\n\n    const [weather, setWeather] = useState(null);\n\n    const apiKey = \"ac7fcd8f0128428bae1233320212304\";\n\n    useEffect(() => {\n\n        async function fetchData() {\n            const request = await axios.get(`http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=48207&days=10&aqi=no&alerts=no`);\n            setWeather(request.data);\n            console.log(request.data);\n            return request;\n        }\n        fetchData();\n\n    }, []);\n\n    //Calling api after \n    var searchWeather = (city) => {\n\n        axios\n        .get(`http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${city}&days=10&aqi=no&alerts=no`)\n        .then((data) => {\n            console.log(\"success\");\n            setWeather(data.data);\n        }).catch(() => {\n            console.log(\"Please Check the input parameters\")\n        })\n\n    }\n\n    return(\n        <div>\n            <div className=\"bg\">\n\n                {/* Passing Props to the Children Components */}\n                {weather && <CurrentWeather weatherData = {weather} searchWeather = {city => searchWeather(city)}/>}\n                {weather && <WeatherForecast weatherData = {weather}/>}\n\n            </div>\n        </div>\n    );\n    \n}\n\nexport default WeatherApi;","import React from \"react\";\nimport './styles/styles.css';\nimport WeahterApi from \"./api/WeatherApi\"\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n           <WeahterApi />\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}